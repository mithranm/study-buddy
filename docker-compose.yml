services:
  backend:
    build: ./backend
    ports:
      - "9090:9090"
    volumes:
      - ./backend/src:/app/src
      - chroma_db:/app/chroma_db
      - textracted:/app/textracted
      - uploads:/app/uploads
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}  # Default to production if not set
      - FLASK_APP=src.main
      - FLASK_RUN_PORT=9090
      - CHROMA_DB_PATH=/app/chroma_db
      - RAW_DOCUMENTS_PATH=/app/raw-documents
      - UPLOAD_FOLDER=/app/uploads
      - OLLAMA_HOST=localhost:11434
      - GCP_PROJECT_ID
      - GCP_LOCATION
      - GCP_SECRET_PATH
    working_dir: /app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/api/status"]
      interval: 30s
      timeout: 10s
      retries: 5

  celery_worker:
    build: ./backend
    command: celery -A src.main:celery worker --loglevel=info
    volumes:
      - ./backend/src:/app/src
      - chroma_db:/app/chroma_db
      - textracted:/app/textracted
      - uploads:/app/uploads
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - CHROMA_DB_PATH=/app/chroma_db
      - RAW_DOCUMENTS_PATH=/app/raw-documents
      - UPLOAD_FOLDER=/app/uploads
      - OLLAMA_HOST=localhost:11434
      - GCP_PROJECT_ID
      - GCP_LOCATION
      - GCP_SECRET_PATH
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  redis:
    image: "redis:alpine"

  frontend:
    build: ./frontend
    ports:
      - "9091:9091"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:9090
      - PORT=9091
    depends_on:
      - backend

volumes:
  chroma_db:
  textracted:
  uploads: